var DeviceButton = React.createClass({
  getInitialState: function() {
    return {status: this.props.status}
  },
  handleClick: function(event) {
    var newState = "-1";
    if (this.state.status == "0") {
      newState = "1";
    } else if (this.state.status == "1") {
      newState = "0";
    } else {
      return;
    }
    this.setState({status: newState});
    console.log(newState)
  },

  componentDidUpdate: function() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      type: 'GET',
      data: {"name" : this.props.name, "new_state" : this.state.status },
      success: function(data) {
      }.bind(this),
      error: function(xkh, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },

  render: function() {
    if (this.state.status != "-1") {
      return (
        <p onClick={this.handleClick}>
          {this.state.status == "0" ? "off" : "on"}
        </p>
      );
    }
    return <p></p>;
  }
});

var Device = React.createClass({
  rawMarkup: function() {
    var rawMarkup = marked(this.props.children.toString(), {sanitize: true});
    return { __html: rawMarkup };
  },

  render: function() {
    var status_button = <DeviceButton status={this.props.status} id={this.props.id} name={this.props.name} url={"/api/devices/toggle"}/>
    return (
      <div className="device">
        <h2 className="deviceId">
          {this.props.name}
        </h2>
        id: {this.props.id} 
        <br/>
        room: {this.props.room}
        <br/>
        status: {this.props.status}
        {status_button}
      </div>
    );
  }
});

var DeviceBox = React.createClass({
  loadDevicesFromServer: function() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
  getInitialState: function() {
    return {data: []};
  },
  componentDidMount: function() {
    this.loadDevicesFromServer();
  },
  render: function() {
    return (
      <div className="deviceBox">
        <h1>Devices</h1>
        <DeviceList data={this.state.data} />
      </div>
    );
  }
});

var DeviceList = React.createClass({
  render: function() {
    var devices = this.props.data.map(function(device) {
      var state = "-1";
      for (var i = 0; i < device["states"].length; i++) {
        if (device["states"][i]["variable"] == "Status") {
          state = device["states"][i]["value"];
        }
      }
      return(
        <Device 
          room={device["room"]} 
          key={device["id"]} 
          id={device["id"]} 
          name={device["name"]} 
          status={state}
        >
        </Device>
      );
    });
    return (
      <div className="deviceList">
        {devices}
      </div>
    );
  }
});


ReactDOM.render(
  <DeviceBox url="/api/devices" />,
  document.getElementById('content')
);
